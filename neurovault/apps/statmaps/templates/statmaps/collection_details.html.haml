{% extends "base.html" %}
{% block head %}

<title>{% block title %}NeuroVault: {{collection.name}}{% endblock %}</title>

<script type='text/javascript'>

 function showLoader() {   
    document.getElementById('spinny').style.display = 'block';
    document.getElementById('fade').style.display = 'block';
  }

  function hideLoader() {
    document.getElementById('spinny').style.display = 'none';
    document.getElementById('fade').style.display = 'none';
  }

(function() {
  var uldata;

  uldata = void 0;

  $(document).ready(function() {
    $('#show-viewer').click((function(_this) {
      return function() {
        window.viewer.paint();
        return setTimeout(function() {
          return window.viewer.paint();
        }, 1);
      };
    })(this));
    $("table[class*=collection-details-datatable]").dataTable({
      sDom: "<'row-fluid'<'span6'l><'span6'f>r>t<'row-fluid'<'span6'i><'span6'p>>",
      sAjaxSource: "/api/collections/" + "{{ cid }}" + "/datatable/?format=json",
      iDisplayLength: 10
    });
    $("table[class*=collection-images-datatable]").dataTable({
      sDom: "<'row-fluid'<'span6'l><'span6'f>r>t<'row-fluid'<'span6'i><'span6'p>>",
      iDisplayLength: 10,
      aoColumns: [
        {
          sWidth: '7%'
        }, {
          sWidth: '43%'
        }, {
          sWidth: '12%'
        }, {
          sWidth: '15%'
        }, {
          sWidth: '23%'
        }
      ],
      fnRowCallback: function(nRow, aData, iDisplayIndex) {
        return nRow;
      }
    });
    $('#collection-tabs a:first').tab('show');
    $('#delete_collection').click(function(e) {
      return confirm("Are you sure you want to delete this collection? This operation cannot be undone!");
    });
    $('#upload_archive').click(function(e) {
      return document.getElementById("id_file").click();
    });
    $('#upload_folder').click(function(e) {
      return document.getElementById("folder_input").click();
    });
    $('#id_file').change(function(e) {
      return document.upload_folder_form.submit();
    });
    $('#folder_input').change(function(e) {
      uldata = e.target.files;
      return $('#upload_process').modal('show');
    });
    $("#upload_process").on("shown.bs.modal", function(e) {
      var csrftoken, data, files, i, paths, xhr;
      paths = "";
      files = uldata;
      xhr = new XMLHttpRequest();
      data = new FormData();
      for (i in files) {
        if (files[i].name !== void 0 && files[i].webkitRelativePath !== void 0) {
          if (files[i].name.indexOf(".") !== 0 && files[i].webkitRelativePath.indexOf('.files') === -1) {
            data.append('paths[]', files[i].webkitRelativePath);
            data.append('file_input[]', files[i]);
          }
        }
      }
      
      csrftoken = $.cookie('csrftoken');
      xhr.open('POST', "upload_folder", true);
      xhr.setRequestHeader("X-CSRFToken", csrftoken);
      xhr.onloadstart = function(e){
                $('.modal-backdrop').removeClass("modal-backdrop"); 
                showLoader();
      };
      
      // We need to know when the request finishes.
      xhr.onload = function (e) {
      if (xhr.status === 200) {
            hideLoader();
            return document.location = '';
          };
      }
      xhr.send(data);
      //return document.location = "";
    });
    if (navigator.userAgent.indexOf("Safari") > -1 && navigator.userAgent.indexOf("Chrome") === -1) {
      return $('a[href="pycortex"]').hide();
    }
  });

}).call(this);

</script>
{% endblock %}

{% block content %}
%fade
.row
    .span11
        %h2 {{ collection.name }}
        %p Contributed by {{ collection.owner }}
        - if collection.authors
            .lead {{collection.authors}}
        - if collection.DOI
            .lead
                %a{href:"{{ collection.url }}" } Link to the paper
        - if collection.full_dataset_url
            .lead
                Full dataset available at:
                %a{href:"{{ collection.full_dataset_url }}" }
                  {{ collection.full_dataset_url }}


        .management-options
            %form{action: "upload_folder", enctype: "multipart/form-data", method: "POST", name: "upload_folder_form"}
              - if collection.image_set.all
                  %a.btn.btn-primary{href: "pycortex" } 3D View
              - if edit_permission
                  %a.btn.btn-primary{href: "{% url 'add_image' cid %}" } Add image

                  .btn-group
                    %a.btn.btn-primary.dropdown-toggle{href: "#", data-toggle: "dropdown"} Edit
                      %span.caret
                    %ul.dropdown-menu
                      %li
                        %a{href: "{% url 'edit_collection' cid %}" } Collection Metadata
                     - if collection.image_set.all
                        - if collection.is_statisticmap_set
                          %li
                            %a{href: "{% url 'edit_metadata' cid %}" } Images Metadata
                        - else
                          %li{class: "disabled"}
                            %a{href: "#"} Images Metadata

                 - if collection.image_set.all
                  .btn-group
                    %a.btn.btn-primary.dropdown-toggle{href: "#", data-toggle: "dropdown"} Upload
                      %span.caret
                    %ul.dropdown-menu
                      %li
                        %a{id:"upload_archive", href: "#" } Archive (.zip)
                      <!--[if !IE]> -->
                      %li
                        %a{id:"upload_folder", href: "#" } Folder
                      <!-- <![endif]-->
                  - if delete_permission
                      .float-right-wrapper
                       %a.btn.btn-danger{href: "{% url 'delete_collection' cid %}", id:"delete_collection"} Delete collection
                  {% csrf_token %}
                  %div{style: "height: 0px;width: 0px; overflow:hidden;"}
                     {{ form.file }}
                     %input{type: "file", name: "file_input[]", id: "folder_input", multiple:"", directory:"", mozdirectory:"", webkitdirectory:""}
                     %input{type: "hidden", name: "paths", id: "paths"}

                 - if collection.private
                    .lead
                        %div{style: "font-size:16px; margin-top:20px;"}
                            <em>Private Collection</em>: To share the link to this collection, please use the private url:
                                    %a{href: "{{ request.path }}" }
                                        {{ request.path }}

        {% if messages %}
        %ul.messages
        {% for message in messages %}
            .alert.fade.in{class:"{{ message.tags }}"}
                %button.close{"data-dismiss" => "alert", :type => "button"} Ã—
                {{ message }}
        {% endfor %}
        {% endif %}


        %ul#collection-tabs.nav.nav-tabs
            %li
                %a{href:'#images', data-toggle:'tab'} Images
            %li
                %a{href:'#details', data-toggle:'tab'} Details

        .tab-content
            #images.tab-pane.active
                - if collection.image_set.all or not edit_permission
	                %table.table.table-striped.table-hover.collection-images-datatable
	                    %thead
	                        %tr
	                            %th ID
	                            %th Name
	                            %th Tags
	                            %th Type
	                            %th Description
	                    %tbody
	                        - for image in images
	                            %tr
	                                %td= image.id
	                                %td
	                                     - if image.zip_name
	                                        %a{ href: "{{image.nidm_results.get_absolute_url}}" }
	                                            {{image.nidm_results.name}}
	                                        &nbsp;<i class="icon-double-angle-right"></i>&nbsp;
	                                        %a{ href: "{{image.get_absolute_url}}" }
	                                            {{ image.name }}
	                                     - else
	                                        %a{ href: "{{image.get_absolute_url}}" }= image.name
	                                %td
	                                    - for tag in image.tags.all
	                                        %a{ href: "/images/tags/{{tag.name}}" }= tag.name
	                                        - if not forloop.last

	                                %td= image.polymorphic_ctype.name
	                                %td
	                                    - if image.zip_name
	                                        NIDMResults:
	                                        %a{href: "{{image.nidm_results.zip_file.url}}" }
	                                            {{image.nidm_results.name}}.zip
	                                    - else
	                                        {{image.description}}
                - else
                    .light-head.center-text
                        This collection is empty. You can:
                        <br><br>
                        {% csrf_token %}
                        %div{style: "height: 0px;width: 0px; overflow:hidden;"}
                            {{ form.file }}
                            %input{type: "file", name: "file_input[]", id: "folder_input", multiple:"", directory:"", mozdirectory:"", webkitdirectory:""}
                            %input{type: "hidden", name: "paths", id: "paths"}
                        %a.btn.btn-lg.btn-primary{href: "{% url 'add_image' cid %}" } Add images one by one
	                    %a.btn.btn-lg.btn-primary{id:"upload_archive"} Upload an archive with images (.zip or .tar.gz)
	                    <!--[if !IE]> -->
	                    %a.btn.btn-lg.btn-primary{id:"upload_folder"} Upload a folder with images
	                    <!-- <![endif]-->

            #details.tab-pane
                %table.table.table-condensed.table-striped.table-hover.collection-details-datatable
                    %thead
                        %tr
                            %th Field
                            %th Value
                    %tbody
            #viewer.tab-pane
                {% include 'statmaps/_neurosynth_viewer_content.html.haml' %}

            #upload_process.modal{data-keyboard:'false', style: 'margin-top: 175px;'}
                


      <div id='spinny' class='modal neuron_loader' style='margin-top: 175px; left:45%; top:15%' data-keyboard='false'>
          <img src="{% static "images/spinner.gif"%}"/>
      </div><!-- close spinner-->

{% comment %}
{% for image in collection.image_set.all %}
    <li><a href="{% url 'image_details' image.id %}">{{ image.name }}</a></li>
{% endfor %}


<a href="{{collection.url}}">{{collection.name}}</a> by {{collection.authors}}

<a href="{% url 'edit_images' cid %}">Add/edit files</a>
{% endcomment %}
{% endblock %}
